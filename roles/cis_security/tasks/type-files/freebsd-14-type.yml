---
# Task file for CIS Controls
# This file is commented to help view what Ansible Automation is doing
#  and under what circumstances.

# Some blocks below have tasks with tags and some without. Blocks of tasks that
#  contain multiple controls have tasks with tags. Blocks that consist of a
#  single control and are just put together for convenience sake, do not have
#  sub-block tasks with tags.

# Comments about how the modules are used will become more infrequent as
#  the file goes along to avoid repeating oneself.

# Let the user know what version of the controls file is running
# Use a variable so it prints out the correct version.
- name: Print Header
  ansible.builtin.debug:
    msg: "CIS Controls for {{ ansible_distribution }} {{ ansible_distribution_major_version }}"

# Collect the packages installed on the system so we can check agains them later
- name: Collect package list
  ansible.builtin.package_facts:
    manager: auto
  tags:
    - always

- name: 1.1.1 - Configure Filesystem Kernel Modules
  tags:
    - "1.1"
    - 1.1.1
  block:
    - name: 1.1.1.1 - Ensure ext2fs kernel module is not available
      when: disable_ext2fs | default(true)
      community.general.sysrc:
        name: "ext2fs_load"
        state: present
        value: "NO"
        path: /boot/loader.conf
      tags:
        - 1.1.1.1

    - name: 1.1.1.2 - Ensure msdosfs kernel module is not available
      when: disable_msdosfs | default(true)
      community.general.sysrc:
        name: "msdosfs_load"
        state: present
        value: "NO"
        path: /boot/loader.conf
      tags:
        - 1.1.1.2

    - name: 1.1.1.3 - Ensure zfs kernel module is not available
      when: disable_zfs | default(true)
      block:
        - name: 1.1.1.3 - disable zfs kernel module
          community.general.sysrc:
            name: "zfs_load"
            state: present
            value: "NO"
            path: /boot/loader.conf

        - name: 1.1.1.3 - disable zfs services
          community.general.sysrc:
            name: "zfs_enable"
            state: present
            value: "NO"
      tags:
        - 1.1.1.3

- name: 1.1.2 - Configure Filesystem Partitions
  tags:
    - "1.1"
    - 1.1.2
  include_tasks: freebsd-fs.yml
  loop: "{{ cis_freebsd_filesystems | default([]) }}"

- name: 1.2.1 - Ensure update server certificate key fingerprints are configured
  block:
    - name: 1.2.1 set_fact tmp_key
      ansible.builtin.set_fact:
        tmp_key: "ansible-{{ inventory_hostname }}-{{ ansible_date_time.epoch }}"

    - name: 1.2.1 fetch public key
      ansible.builtin.get_url:
        ### This is a bit weird, but we always want the "x.y-RELEASE" URL here, they don't republish for patch
        ### versions or -STABLE, etc:
        url: "http://update.freebsd.org/{{ ansible_distribution_version }}-RELEASE/{{ ansible_architecture }}/pub.ssl"
        dest: "/tmp/{{ tmp_key }}-pub.ssl"
        mode: 0400
      changed_when: false

    - name: 1.2.1 fetch metadata
      ansible.builtin.get_url:
        url: "http://update.freebsd.org/{{ ansible_distribution_version }}-RELEASE/{{ ansible_architecture }}/latest.ssl"
        dest: "/tmp/{{ tmp_key }}-latest.ssl"
        mode: 0400
      changed_when: false

    - name: 1.2.1 verify
      ansible.builtin.shell: openssl rsautl -pubin -inkey /tmp/{{ tmp_key }}-pub.ssl -verify < /tmp/{{ tmp_key }}-latest.ssl
      register: openssl_verify_pkgkey
      changed_when: false

    - name: 1.2.1 sha256 public key
      ansible.builtin.shell: sha256 -q /tmp/{{ tmp_key }}-pub.ssl
      register: sha256_pkgkey_pub
      changed_when: false

    - name: 1.2.1 get freebsd-update KeyPrint
      ansible.builtin.shell: grep KeyPrint /etc/freebsd-update.conf | cut -f 2 -w
      register: sha256_pkgkey_conf
      changed_when: false

    - name: 1.2.1 verify update server key fingerprint
      when: sha256_pkgkey_pub.stdout != sha256_pkgkey_conf.stdout
      ansible.builtin.debug:
        msg: "FAILED CONTROL: /etc/freebsd-update.conf KeyPrint does not match upstream"
      changed_when: true

    - name: 1.2.1 cleanup tmpfiles
      ansible.builtin.file:
        name: "{{ item }}"
        state: absent
      changed_when: false
      loop:
        - /tmp/{{ tmp_key }}-pub.ssl
        - /tmp/{{ tmp_key }}-latest.ssl
  tags:
    - "1.2"
    - 1.2.1

- name: 1.2.2 - Ensure package manager repositories are configured
  block:
    - name: 1.2.2 get pkg repo list
      ansible.builtin.shell: pkg -vv | sed '1, /^Repositories/d' | grep -c -E '\s\{'
      register: pkg_repo_list
      changed_when: false

    - name: 1.2.2 package repo list length
      when: (pkg_repo_list.stdout | int) > cis_package_repo_count
      ansible.builtin.debug:
        msg: "FAILED CONTROL: package repo list length longer than expected (is {{ pkg_repo_list.stdout | int }}, should be {{ cis_package_repo_count }})"
      changed_when: true
  tags:
    - "1.2"
    - 1.2.2

- name: 1.2.3 - Ensure updates, patches, and additional security software are installed
  block:
    - name: 1.2.3 - freebsd-update fetch updatesready
      ansible.builtin.shell: freebsd-update fetch updatesready
      register: freebsd_updatesready
      failed_when: freebsd_updatesready.rc > 2
      changed_when: false

    - name: 1.2.3 - system updates ready control
      when: freebsd_updatesready.rc != 2
      ansible.builtin.debug:
        msg: "FAILED CONTROL: freebsd-update has available updates to apply"
      changed_when: true

    - name: 1.2.3 - pkg upgrade check
      ansible.builtin.shell: pkg update -q && pkg upgrade -n | grep -c 'Your packages are up to date'
      register: pkg_upgrade_check
      failed_when: false
      changed_when: false

    - name: 1.2.3 - pkg upgrades available
      when: (pkg_upgrade_check.stdout | int) != 1
      ansible.builtin.debug:
        msg: "FAILED CONTROL: pkg has available updates to apply"
      changed_when: true
  tags:
    - "1.2"
    - 1.2.3

- name: 1.3.1 - Ensure bootloader password is set
  block:
    ## TODO - This check is maybe a bit too rudimentary, how to definitively know that a passphrase or key was supplied at boot?
    - name: 1.3.1 - Check for enabled disk encryption with geli
      ansible.builtin.shell: geli status | grep -c ACTIVE
      register: geli_active_devcount
      failed_when: false
      changed_when: false

    ## TODO - There are other locations this password could exist in (loader.conf.local, loader.conf.d/*), check them?
    - name: 1.3.1 - Check for bootloader password in /boot/loader.conf
      ansible.builtin.shell: grep -c -E '^password' /boot/loader.conf || echo 0
      register: bootloader_password
      failed_when: false
      changed_when: false

    - name: 1.3.1 - Report bootloader password control
      when: (geli_active_devcount.stdout | int) == 0 and (bootloader_password.stdout | int) == 0
      ansible.builtin.debug:
        msg: "FAILED CONTROL: bootloader has no password set, disk encryption not enabled"
      changed_when: true
  tags:
    - "1.3"
    - 1.3.1

- name: 1.3.2 - Ensure permissions on bootloader config are configured
  block:
    - name: 1.3.2 - Ensure permissions on /boot/loader.conf are configured
      ansible.builtin.file:
        path: /boot/loader.conf
        state: file
        owner: root
        group: wheel
        mode: 0600

    - name: 1.3.2 - Ensure permissions on /boot/loader.conf.local are configured
      ansible.builtin.file:
        path: /boot/loader.conf.local
        state: file
        owner: root
        group: wheel
        mode: 0600
      failed_when: false   # may not exist, and this is fine!

    - name: 1.3.2 - Ensure permissions on /boot/loader.conf.d are configured
      ansible.builtin.file:
        path: /boot/loader.conf.d
        state: directory
        owner: root
        group: wheel
        mode: 0700
  tags:
    - "1.3"
    - 1.3.2

- name: 1.4.1 - Ensure ASLR is enabled
  ansible.posix.sysctl:
    name: kern.elf64.aslr.enable
    value: '1'
    reload: false
  tags:
    - "1.4"
    - 1.4.1

- name: 1.4.2 - Ensure core dump backtraces are disabled
  community.general.sysrc:
    name: "savecore_enable"
    state: present
    value: "NO"
  tags:
    - "1.4"
    - 1.4.2

- name: 1.4.3 - Ensure core dump storage is disabled
  community.general.sysrc:
    name: "dumpdev"
    state: present
    value: "NO"
  tags:
    - "1.4"
    - 1.4.3

## TODO: can we automate this one?
- name: 1.5 - Mandatory Access Control
  ansible.builtin.debug:
    msg: "TODO: system specific MAC ruleset"
  tags: "1.5"

- name: 1.6 - Configure Command Line Warning Banners
  block:
    - name: 1.6.1 - Ensure message of the day is configured properly - disable service
      community.general.sysrc:
        name: "update_motd"
        state: present
        value: "NO"

    - name: 1.6.1 - Ensure message of the day is configured properly - stop service
      ansible.builtin.service:
        name: "motd"
        state: stopped

    - name: 1.6.1, 1.6.4 - Ensure message of the day is configured properly - copy template
      ansible.builtin.copy:
        dest: /etc/motd
        src: /etc/motd.template
        owner: root
        group: wheel
        mode: 0644

    - name: 1.6.2, 1.6.5 - Ensure local login warning banner is configured properly
      ansible.builtin.copy:
        dest: /etc/issue
        content: "Authorized users only.  All activity may be monitored and reported."
        owner: root
        group: wheel
        mode: 0644

    - name: 1.6.3 - Ensure remote login warning banner is configured properly
      ansible.builtin.copy:
        dest: /etc/issue.net
        content: "Authorized users only.  All activity may be monitored and reported."
        owner: root
        group: wheel
        mode: 0644
  tags:
    - "1.6"
    - 1.6.1
    - 1.6.2
    - 1.6.3
    - 1.6.4
    - 1.6.5

- name: 2.1 - Configure Time Synchronization
  block:
    - name: 2.1.1 - Ensure time synchronization is in use - sync on start
      community.general.sysrc:
        name: "ntpd_sync_on_start"
        state: present
        value: "YES"

    - name: 2.1.1 - Ensure time synchronization is in use - enable ntpd
      community.general.sysrc:
        name: "ntpd_enable"
        state: present
        value: "YES"

    - name: 2.1.1 - Ensure time synchronization is in use - start ntpd
      ansible.builtin.service:
        name: "ntpd"
        state: started
  tags:
    - "2.1"
    - 2.1.1

- name: 2.2 - Configure Special Purpose Services
  block:
    - name: 2.2.1 - Ensure autofs services are not in use - disable
      community.general.sysrc:
        name: "autofs_enable"
        state: present
        value: "NO"
      tags: 2.2.1

    - name: 2.2.1 - Ensure autofs services are not in use - stop
      ansible.builtin.service:
        name: "automount"
        state: stopped
      tags: 2.2.1

    - name: 2.2.2 - Ensure ftp server services are not in use - inetd
      ansible.builtin.lineinfile:
        regexp: "^ftp"
        path: /etc/inetd.conf
        state: absent
      tags: 2.2.2

    - name: 2.2.2 - Ensure ftp server services are not in use - others
      community.general.pkgng:
        name:
          - ".*ftpd.*"
        state: absent
      tags: 2.2.2

    - name: 2.2.3 - Ensure message access server services are not in use
      community.general.pkgng:
        name:
          - "dovecot.*"
          - "cyrus-imapd.*"
        state: absent
      tags: 2.2.3

    - name: 2.2.4 - Ensure network file system services are not in use - disable
      community.general.sysrc:
        name: "nfs_server_enable"
        state: present
        value: "NO"
      tags: 2.2.4

    - name: 2.2.4 - Ensure network file system services are not in use - stop
      ansible.builtin.service:
        name: "nfsd"
        state: stopped
      tags: 2.2.4

    - name: 2.2.5 - Ensure nis server services are not in use - disable
      community.general.sysrc:
        name: "nis_server_enable"
        state: present
        value: "NO"
      tags: 2.2.5

    - name: 2.2.5 - Ensure nis server services are not in use - stop
      ansible.builtin.service:
        name: "ypserv"
        state: stopped
      tags: 2.2.5

    - name: 2.2.6 - Ensure rpcbind services are not in use - disable
      community.general.sysrc:
        name: "rpcbind_enable"
        state: present
        value: "NO"
      tags: 2.2.6

    - name: 2.2.6 - Ensure rpcbind services are not in use - stop
      ansible.builtin.service:
        name: "rpcbind"
        state: stopped
      tags: 2.2.6

    - name: 2.2.7 - Ensure snmp services are not in use - base bsnmpd disable
      community.general.sysrc:
        name: "bsnmpd_enable"
        state: present
        value: "NO"
      tags: 2.2.7

    - name: 2.2.7 - Ensure snmp services are not in use - base bsnmpd stop
      ansible.builtin.service:
        name: "bsnmpd"
        state: stopped
      tags: 2.2.7

    - name: 2.2.7 - Ensure snmp services are not in use - net-snmp disable
      community.general.sysrc:
        name: "snmpd_enable"
        state: present
        value: "NO"
      tags: 2.2.7

    - name: 2.2.7 - Ensure snmp services are not in use - net-snmp stop
      ansible.builtin.service:
        name: "snmpd"
        state: stopped
      tags: 2.2.7

    - name: 2.2.8 - Ensure telnet server services are not in use
      community.general.pkgng:
        name:
          - "freebsd-telnetd"
        state: absent
      tags: 2.2.8

    - name: 2.2.8 - Ensure telnet server services are not in use - inetd
      ansible.builtin.lineinfile:
        regexp: "^telnet"
        path: /etc/inetd.conf
        state: absent
      tags: 2.2.8

    - name: 2.2.9 - Ensure tftp server services are not in use - inetd
      ansible.builtin.lineinfile:
        regexp: "^tftp"
        path: /etc/inetd.conf
        state: absent
      tags: 2.2.9

    - name: 2.2.10 - Ensure web proxy server services are not in use - squid
      community.general.pkgng:
        name:
          - "squid"
        state: absent
      tags: 2.2.10

    - name: 2.2.11 - Ensure mail transfer agents are configured for local-only mode - query
      ansible.builtin.shell: sockstat -46L | grep -c -E ':25\b|:465\b|:587\b'
      register: sockstat_smtp_listen
      failed_when: false
      changed_when: false
      tags: 2.2.11

    - name: 2.2.11 - Ensure mail transfer agents are configured for local-only mode - report
      when: (sockstat_smtp_listen.stdout | int) > 0
      ansible.builtin.debug:
        msg: "FAILED CONTROL: MTA listening on ports it should not be ({{ sockstat_smtp_listen.stdout | int }}, should be 0)"
      changed_when: true
      tags: 2.2.11

    ## TODO: can we automate this one?
    - name: 2.2.12 - only approved services listening on network interfaces
      ansible.builtin.debug:
        msg: "WARNING: review 'sockstat -46L' for unapproved listening services"
      tags: 2.2.12
  tags: "2.2"

- name: 3.1 - Ensure IPv6 status is identified
  ansible.builtin.shell: "[ $(sysctl -nq kern.features.inet6) -eq 1 ] && printf 'IPv6 is enabled\n' || printf 'IPv6 is not enabled\n'"
  changed_when: false
  tags: "3.1"

- name: 3.2 - Configure Network Kernel Modules
  block:
    - name: 3.2.1 - Ensure sctp kernel modules is not available
      when: disable_sctp | default(true)
      community.general.sysrc:
        name: "module_blacklist"
        state: value_present
        value: "sctp"
        path: /boot/loader.conf
      tags:
        - 3.2.1
  tags: "3.2"

- name: 3.3 - Configure Network Kernel Parameters
  block:
    - name: 3.3.1 - Ensure ip forwarding is disabled - ipv4
      ansible.posix.sysctl:
        name: net.inet.ip.forwarding
        value: '0'
        reload: false
      tags: 3.3.1

    - name: 3.3.1 - Ensure ip forwarding is disabled - ipv4 service
      community.general.sysrc:
        name: "gateway_enable"
        state: present
        value: "NO"
      tags: 3.3.1

    - name: 3.3.1 - Ensure ip forwarding is disabled - ipv6
      ansible.posix.sysctl:
        name: net.inet6.ip6.forwarding
        value: '0'
        reload: false
      tags: 3.3.1

    - name: 3.3.1 - Ensure ip forwarding is disabled - ipv6 service
      community.general.sysrc:
        name: "ipv6_gateway_enable"
        state: present
        value: "NO"
      tags: 3.3.1

    - name: 3.3.2 - Ensure packet redirect sending is disabled - ipv4
      ansible.posix.sysctl:
        name: net.inet.ip.redirect
        value: '0'
        reload: false
      tags: 3.3.2

    - name: 3.3.2 - Ensure packet redirect sending is disabled - ipv6
      ansible.posix.sysctl:
        name: net.inet6.ip6.redirect
        value: '0'
        reload: false
      tags: 3.3.2

    - name: 3.3.3 - Ensure broadcast & multicast icmp requests are ignored - bmcastecho
      ansible.posix.sysctl:
        name: net.inet.icmp.bmcastecho
        value: '0'
        reload: false
      tags: 3.3.3

    - name: 3.3.3 - Ensure broadcast & multicast icmp requests are ignored - tstamprepl
      ansible.posix.sysctl:
        name: net.inet.icmp.tstamprepl
        value: '0'
        reload: false
      tags: 3.3.3

    - name: 3.3.4 - Ensure icmp redirects are not accepted - ipv4
      ansible.posix.sysctl:
        name: net.inet.icmp.drop_redirect
        value: '1'
        reload: false
      tags: 3.3.4

    - name: 3.3.4 - Ensure icmp redirects are not accepted - ipv6
      ansible.posix.sysctl:
        name: net.inet6.icmp6.rediraccept
        value: '0'
        reload: false
      tags: 3.3.4

    - name: 3.3.5 - Ensure source routed packets are not accepted
      ansible.posix.sysctl:
        name: net.inet.ip.accept_sourceroute
        value: '0'
        reload: false
      tags: 3.3.5

    - name: 3.3.6 - Ensure tcp syn cookies is enabled
      ansible.posix.sysctl:
        name: net.inet.tcp.syncookies
        value: '1'
        reload: false
      tags: 3.3.6

    - name: 3.3.7 - Ensure ipv6 router advertisements are not accepted
      ansible.posix.sysctl:
        name: net.inet6.ip6.accept_rtadv
        value: '0'
        reload: false
      tags: 3.3.7
  tags: "3.3"
